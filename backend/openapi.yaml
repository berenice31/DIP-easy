openapi: 3.1.0
info:
  title: DIP-easy
  version: 0.1.0
paths:
  /api/v1/auth/signup:
    post:
      tags:
      - auth
      summary: Create User
      description: Create new user.
      operationId: create_user_api_v1_auth_signup_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/auth/token:
    post:
      tags:
      - auth
      summary: Login Access Token
      description: OAuth2 compatible token login, get an access token for future requests.
      operationId: login_access_token_api_v1_auth_token_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body_login_access_token_api_v1_auth_token_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/auth/me:
    get:
      tags:
      - auth
      summary: Read Users Me
      description: Get current user.
      operationId: read_users_me_api_v1_auth_me_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
      - OAuth2PasswordBearer: []
  /api/v1/users/:
    get:
      tags:
      - users
      summary: Read Users
      description: Retrieve users.
      operationId: read_users_api_v1_users__get
      parameters:
      - required: false
        schema:
          type: integer
          title: Skip
          default: 0
        name: skip
        in: query
      - required: false
        schema:
          type: integer
          title: Limit
          default: 100
        name: limit
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
                title: Response Read Users Api V1 Users  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
    post:
      tags:
      - users
      summary: Create User
      description: Create new user.
      operationId: create_user_api_v1_users__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /api/v1/users/me:
    get:
      tags:
      - users
      summary: Read User Me
      description: Get current user.
      operationId: read_user_me_api_v1_users_me_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
      - OAuth2PasswordBearer: []
    put:
      tags:
      - users
      summary: Update User Me
      description: Update own user.
      operationId: update_user_me_api_v1_users_me_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /api/v1/users/{user_id}:
    get:
      tags:
      - users
      summary: Read User By Id
      description: Get a specific user by id.
      operationId: read_user_by_id_api_v1_users__user_id__get
      parameters:
      - required: true
        schema:
          type: string
          title: User Id
        name: user_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
    put:
      tags:
      - users
      summary: Update User
      description: Update a user.
      operationId: update_user_api_v1_users__user_id__put
      parameters:
      - required: true
        schema:
          type: string
          title: User Id
        name: user_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /api/v1/products/:
    get:
      tags:
      - products
      summary: Read Products
      description: Retrieve products.
      operationId: read_products_api_v1_products__get
      parameters:
      - required: false
        schema:
          type: integer
          title: Skip
          default: 0
        name: skip
        in: query
      - required: false
        schema:
          type: integer
          title: Limit
          default: 100
        name: limit
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Product'
                type: array
                title: Response Read Products Api V1 Products  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
    post:
      tags:
      - products
      summary: Create Product
      description: Create new product.
      operationId: create_product_api_v1_products__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /api/v1/products/{product_id}:
    get:
      tags:
      - products
      summary: Read Product
      description: Get product by ID.
      operationId: read_product_api_v1_products__product_id__get
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Product Id
        name: product_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
    put:
      tags:
      - products
      summary: Update Product
      description: Update a product.
      operationId: update_product_api_v1_products__product_id__put
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Product Id
        name: product_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
    delete:
      tags:
      - products
      summary: Delete Product
      description: Delete a product.
      operationId: delete_product_api_v1_products__product_id__delete
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Product Id
        name: product_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /api/v1/products/{product_id}/submit:
    put:
      tags:
      - products
      summary: Submit Product
      description: Validate and mark product as VALIDATED
      operationId: submit_product_api_v1_products__product_id__submit_put
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Product Id
        name: product_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /api/v1/dashboard/stats:
    get:
      tags:
      - dashboard
      summary: Get Dashboard Stats
      description: Get dashboard statistics for the current user.
      operationId: get_dashboard_stats_api_v1_dashboard_stats_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
      - OAuth2PasswordBearer: []
  /api/v1/menus/:
    get:
      tags:
      - menus
      summary: Read Menus
      description: Récupérer tous les menus de l'utilisateur.
      operationId: read_menus_api_v1_menus__get
      parameters:
      - required: false
        schema:
          type: integer
          title: Skip
          default: 0
        name: skip
        in: query
      - required: false
        schema:
          type: integer
          title: Limit
          default: 100
        name: limit
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Menu'
                type: array
                title: Response Read Menus Api V1 Menus  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
    post:
      tags:
      - menus
      summary: Create Menu
      description: Créer un nouveau menu.
      operationId: create_menu_api_v1_menus__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /api/v1/menus/{menu_id}:
    get:
      tags:
      - menus
      summary: Read Menu
      description: Récupérer un menu par son ID.
      operationId: read_menu_api_v1_menus__menu_id__get
      parameters:
      - required: true
        schema:
          type: string
          title: Menu Id
        name: menu_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
    put:
      tags:
      - menus
      summary: Update Menu
      description: Mettre à jour un menu.
      operationId: update_menu_api_v1_menus__menu_id__put
      parameters:
      - required: true
        schema:
          type: string
          title: Menu Id
        name: menu_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
    delete:
      tags:
      - menus
      summary: Delete Menu
      description: Supprimer un menu.
      operationId: delete_menu_api_v1_menus__menu_id__delete
      parameters:
      - required: true
        schema:
          type: string
          title: Menu Id
        name: menu_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /api/v1/menus/{menu_id}/items:
    post:
      tags:
      - menus
      summary: Create Menu Item
      description: Ajouter un élément au menu.
      operationId: create_menu_item_api_v1_menus__menu_id__items_post
      parameters:
      - required: true
        schema:
          type: string
          title: Menu Id
        name: menu_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItemCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItemInDB'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /api/v1/menus/items/{item_id}:
    put:
      tags:
      - menus
      summary: Update Menu Item
      description: Mettre à jour un élément du menu.
      operationId: update_menu_item_api_v1_menus_items__item_id__put
      parameters:
      - required: true
        schema:
          type: string
          title: Item Id
        name: item_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItemUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItemInDB'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
    delete:
      tags:
      - menus
      summary: Delete Menu Item
      description: Supprimer un élément du menu.
      operationId: delete_menu_item_api_v1_menus_items__item_id__delete
      parameters:
      - required: true
        schema:
          type: string
          title: Item Id
        name: item_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: boolean
                title: Response Delete Menu Item Api V1 Menus Items  Item Id  Delete
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /api/v1/templates/:
    get:
      tags:
      - templates
      summary: List Templates
      operationId: list_templates_api_v1_templates__get
      parameters:
      - required: false
        schema:
          type: integer
          title: Skip
          default: 0
        name: skip
        in: query
      - required: false
        schema:
          type: integer
          title: Limit
          default: 100
        name: limit
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Template'
                type: array
                title: Response List Templates Api V1 Templates  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
    post:
      tags:
      - templates
      summary: Upload Template
      description: Upload d'un fichier .docx comme nouveau modèle.
      operationId: upload_template_api_v1_templates__post
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_upload_template_api_v1_templates__post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /api/v1/templates/{template_id}:
    delete:
      tags:
      - templates
      summary: Delete Template
      operationId: delete_template_api_v1_templates__template_id__delete
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Template Id
        name: template_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /api/v1/generations/:
    post:
      tags:
      - generations
      summary: Generate Document
      operationId: generate_document_api_v1_generations__post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body_generate_document_api_v1_generations__post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Generation'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /api/v1/generations/{generation_id}/finalize:
    patch:
      tags:
      - generations
      summary: Finalize Document
      operationId: finalize_document_api_v1_generations__generation_id__finalize_patch
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Generation Id
        name: generation_id
        in: path
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_finalize_document_api_v1_generations__generation_id__finalize_patch'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Generation'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /api/v1/admin/drive/:
    get:
      tags:
      - admin
      - admin
      summary: Get Drive configuration
      operationId: get_drive_config_api_v1_admin_drive__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
      - OAuth2PasswordBearer: []
  /api/v1/admin/drive/credentials:
    post:
      tags:
      - admin
      - admin
      summary: Upload service account JSON
      operationId: upload_credentials_api_v1_admin_drive_credentials_post
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_upload_credentials_api_v1_admin_drive_credentials_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /api/v1/admin/drive/folder:
    post:
      tags:
      - admin
      - admin
      summary: Set Drive root folder ID
      operationId: set_drive_folder_api_v1_admin_drive_folder_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_set_drive_folder_api_v1_admin_drive_folder_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /:
    get:
      summary: Root
      operationId: root__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
components:
  schemas:
    Body_finalize_document_api_v1_generations__generation_id__finalize_patch:
      properties:
        file:
          type: string
          format: binary
          title: File
      type: object
      required:
      - file
      title: Body_finalize_document_api_v1_generations__generation_id__finalize_patch
    Body_generate_document_api_v1_generations__post:
      properties:
        template_id:
          type: string
          format: uuid
          title: Template Id
        product_id:
          type: string
          format: uuid
          title: Product Id
      type: object
      required:
      - template_id
      - product_id
      title: Body_generate_document_api_v1_generations__post
    Body_login_access_token_api_v1_auth_token_post:
      properties:
        grant_type:
          type: string
          pattern: password
          title: Grant Type
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
        scope:
          type: string
          title: Scope
          default: ''
        client_id:
          type: string
          title: Client Id
        client_secret:
          type: string
          title: Client Secret
      type: object
      required:
      - username
      - password
      title: Body_login_access_token_api_v1_auth_token_post
    Body_set_drive_folder_api_v1_admin_drive_folder_post:
      properties:
        folder_id:
          type: string
          title: Folder Id
      type: object
      required:
      - folder_id
      title: Body_set_drive_folder_api_v1_admin_drive_folder_post
    Body_upload_credentials_api_v1_admin_drive_credentials_post:
      properties:
        file:
          type: string
          format: binary
          title: File
      type: object
      required:
      - file
      title: Body_upload_credentials_api_v1_admin_drive_credentials_post
    Body_upload_template_api_v1_templates__post:
      properties:
        file:
          type: string
          format: binary
          title: File
        name:
          type: string
          title: Name
      type: object
      required:
      - file
      - name
      title: Body_upload_template_api_v1_templates__post
    CompatibilityTest:
      properties:
        test_type:
          type: string
          title: Test Type
        test_date:
          type: string
          format: date-time
          title: Test Date
        result:
          type: string
          title: Result
        notes:
          type: string
          title: Notes
        id:
          type: string
          format: uuid
          title: Id
        product_id:
          type: string
          format: uuid
          title: Product Id
      type: object
      required:
      - test_type
      - test_date
      - result
      - id
      - product_id
      title: CompatibilityTest
    CompatibilityTestCreate:
      properties:
        test_type:
          type: string
          title: Test Type
        test_date:
          type: string
          format: date-time
          title: Test Date
        result:
          type: string
          title: Result
        notes:
          type: string
          title: Notes
      type: object
      required:
      - test_type
      - test_date
      - result
      title: CompatibilityTestCreate
    Generation:
      properties:
        product_id:
          type: string
          format: uuid
          title: Product Id
        template_id:
          type: string
          format: uuid
          title: Template Id
        format:
          type: string
          title: Format
          description: Format de sortie
          default: docx
        status:
          type: string
          title: Status
          description: Statut de la génération
          default: pending
        id:
          type: string
          format: uuid
          title: Id
        drive_file_id:
          type: string
          title: Drive File Id
        error_message:
          type: string
          title: Error Message
        initiated_at:
          type: string
          format: date-time
          title: Initiated At
        completed_at:
          type: string
          format: date-time
          title: Completed At
      type: object
      required:
      - product_id
      - template_id
      - id
      - initiated_at
      title: Generation
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    Ingredient:
      properties:
        ingr_nom_inci:
          type: string
          title: Ingr Nom Inci
        ingr_fonction:
          type: string
          title: Ingr Fonction
        ingr_pourcent_min:
          type: number
          title: Ingr Pourcent Min
        ingr_pourcent_max:
          type: number
          title: Ingr Pourcent Max
        ingr_cas:
          type: string
          title: Ingr Cas
        ingr_provenance:
          type: string
          title: Ingr Provenance
        ingr_specif:
          type: string
          title: Ingr Specif
        id:
          type: string
          format: uuid
          title: Id
        product_id:
          type: string
          format: uuid
          title: Product Id
      type: object
      required:
      - ingr_nom_inci
      - ingr_fonction
      - id
      - product_id
      title: Ingredient
    IngredientCreate:
      properties:
        ingr_nom_inci:
          type: string
          title: Ingr Nom Inci
        ingr_fonction:
          type: string
          title: Ingr Fonction
        ingr_pourcent_min:
          type: number
          title: Ingr Pourcent Min
        ingr_pourcent_max:
          type: number
          title: Ingr Pourcent Max
        ingr_cas:
          type: string
          title: Ingr Cas
        ingr_provenance:
          type: string
          title: Ingr Provenance
        ingr_specif:
          type: string
          title: Ingr Specif
      type: object
      required:
      - ingr_nom_inci
      - ingr_fonction
      title: IngredientCreate
    Menu:
      properties:
        name:
          type: string
          maxLength: 100
          minLength: 1
          title: Name
        id:
          type: string
          title: Id
        user_id:
          type: string
          title: User Id
        items:
          items:
            $ref: '#/components/schemas/MenuItemInDB'
          type: array
          title: Items
          default: []
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
      type: object
      required:
      - name
      - id
      - user_id
      - created_at
      - updated_at
      title: Menu
    MenuCreate:
      properties:
        name:
          type: string
          maxLength: 100
          minLength: 1
          title: Name
        items:
          items:
            $ref: '#/components/schemas/MenuItemCreate'
          type: array
          title: Items
      type: object
      required:
      - name
      title: MenuCreate
    MenuItemCreate:
      properties:
        name:
          type: string
          maxLength: 100
          minLength: 1
          title: Name
        description:
          type: string
          maxLength: 500
          title: Description
        price:
          type: number
          exclusiveMinimum: 0.0
          title: Price
        category:
          type: string
          maxLength: 50
          minLength: 1
          title: Category
      type: object
      required:
      - name
      - price
      - category
      title: MenuItemCreate
    MenuItemInDB:
      properties:
        name:
          type: string
          maxLength: 100
          minLength: 1
          title: Name
        description:
          type: string
          maxLength: 500
          title: Description
        price:
          type: number
          exclusiveMinimum: 0.0
          title: Price
        category:
          type: string
          maxLength: 50
          minLength: 1
          title: Category
        id:
          type: string
          title: Id
        menu_id:
          type: string
          title: Menu Id
      type: object
      required:
      - name
      - price
      - category
      - id
      - menu_id
      title: MenuItemInDB
    MenuItemUpdate:
      properties:
        name:
          type: string
          maxLength: 100
          minLength: 1
          title: Name
        description:
          type: string
          maxLength: 500
          title: Description
        price:
          type: number
          exclusiveMinimum: 0.0
          title: Price
        category:
          type: string
          maxLength: 50
          minLength: 1
          title: Category
      type: object
      title: MenuItemUpdate
    MenuUpdate:
      properties:
        name:
          type: string
          maxLength: 100
          minLength: 1
          title: Name
      type: object
      title: MenuUpdate
    Product:
      properties:
        nom_client:
          type: string
          title: Nom Client
        marque:
          type: string
          title: Marque
        gamme:
          type: string
          title: Gamme
        nom_produit:
          type: string
          title: Nom Produit
        format:
          type: string
          title: Format
        version:
          type: string
          title: Version
        nom_commercial:
          type: string
          title: Nom Commercial
        fournisseur:
          type: string
          title: Fournisseur
        ref_formule:
          type: string
          title: Ref Formule
        ref_produit:
          type: string
          title: Ref Produit
        date_mise_marche:
          type: string
          format: date
          title: Date Mise Marche
        resp_mise_marche:
          type: string
          title: Resp Mise Marche
        faconnerie:
          type: string
          title: Faconnerie
        pc_ph:
          type: number
          title: Pc Ph
        pc_densite:
          type: number
          title: Pc Densite
        pc_organoleptiques:
          type: string
          title: Pc Organoleptiques
        pao_theorique:
          type: string
          title: Pao Theorique
        pao_valide:
          type: string
          title: Pao Valide
        util_descr:
          type: string
          title: Util Descr
        util_precaution:
          type: string
          title: Util Precaution
        tox_nanomaterials:
          type: boolean
          title: Tox Nanomaterials
          default: false
        ei_signalements:
          type: string
          title: Ei Signalements
        autres_tests:
          type: string
          title: Autres Tests
        effets_revendiques:
          type: string
          title: Effets Revendiques
        progression:
          type: integer
          title: Progression
          default: 0
        status:
          $ref: '#/components/schemas/ProductStatus'
        ingredients:
          items:
            $ref: '#/components/schemas/Ingredient'
          type: array
          title: Ingredients
          default: []
        stability_tests:
          items:
            $ref: '#/components/schemas/StabilityTest'
          type: array
          title: Stability Tests
          default: []
        compatibility_tests:
          items:
            $ref: '#/components/schemas/CompatibilityTest'
          type: array
          title: Compatibility Tests
          default: []
        id:
          type: string
          format: uuid
          title: Id
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
      type: object
      required:
      - status
      - id
      - created_at
      - updated_at
      title: Product
    ProductCreate:
      properties:
        nom_client:
          type: string
          title: Nom Client
        marque:
          type: string
          title: Marque
        gamme:
          type: string
          title: Gamme
        nom_produit:
          type: string
          title: Nom Produit
        format:
          type: string
          title: Format
        version:
          type: string
          title: Version
        nom_commercial:
          type: string
          title: Nom Commercial
        fournisseur:
          type: string
          title: Fournisseur
        ref_formule:
          type: string
          title: Ref Formule
        ref_produit:
          type: string
          title: Ref Produit
        date_mise_marche:
          type: string
          format: date
          title: Date Mise Marche
        resp_mise_marche:
          type: string
          title: Resp Mise Marche
        faconnerie:
          type: string
          title: Faconnerie
        pc_ph:
          type: number
          title: Pc Ph
        pc_densite:
          type: number
          title: Pc Densite
        pc_organoleptiques:
          type: string
          title: Pc Organoleptiques
        pao_theorique:
          type: string
          title: Pao Theorique
        pao_valide:
          type: string
          title: Pao Valide
        util_descr:
          type: string
          title: Util Descr
        util_precaution:
          type: string
          title: Util Precaution
        tox_nanomaterials:
          type: boolean
          title: Tox Nanomaterials
          default: false
        ei_signalements:
          type: string
          title: Ei Signalements
        autres_tests:
          type: string
          title: Autres Tests
        effets_revendiques:
          type: string
          title: Effets Revendiques
        progression:
          type: integer
          title: Progression
          default: 0
        status:
          allOf:
          - $ref: '#/components/schemas/ProductStatus'
          default: DRAFT
        ingredients:
          items:
            $ref: '#/components/schemas/IngredientCreate'
          type: array
          title: Ingredients
          default: []
        stability_tests:
          items:
            $ref: '#/components/schemas/StabilityTestCreate'
          type: array
          title: Stability Tests
          default: []
        compatibility_tests:
          items:
            $ref: '#/components/schemas/CompatibilityTestCreate'
          type: array
          title: Compatibility Tests
          default: []
      type: object
      title: ProductCreate
    ProductStatus:
      type: string
      enum:
      - DRAFT
      - VALIDATED
      title: ProductStatus
      description: An enumeration.
    ProductUpdate:
      properties:
        nom_client:
          type: string
          title: Nom Client
        marque:
          type: string
          title: Marque
        gamme:
          type: string
          title: Gamme
        nom_produit:
          type: string
          title: Nom Produit
        format:
          type: string
          title: Format
        version:
          type: string
          title: Version
        nom_commercial:
          type: string
          title: Nom Commercial
        fournisseur:
          type: string
          title: Fournisseur
        ref_formule:
          type: string
          title: Ref Formule
        ref_produit:
          type: string
          title: Ref Produit
        date_mise_marche:
          type: string
          format: date
          title: Date Mise Marche
        resp_mise_marche:
          type: string
          title: Resp Mise Marche
        faconnerie:
          type: string
          title: Faconnerie
        pc_ph:
          type: number
          title: Pc Ph
        pc_densite:
          type: number
          title: Pc Densite
        pc_organoleptiques:
          type: string
          title: Pc Organoleptiques
        pao_theorique:
          type: string
          title: Pao Theorique
        pao_valide:
          type: string
          title: Pao Valide
        util_descr:
          type: string
          title: Util Descr
        util_precaution:
          type: string
          title: Util Precaution
        tox_nanomaterials:
          type: boolean
          title: Tox Nanomaterials
          default: false
        ei_signalements:
          type: string
          title: Ei Signalements
        autres_tests:
          type: string
          title: Autres Tests
        effets_revendiques:
          type: string
          title: Effets Revendiques
        progression:
          type: integer
          title: Progression
          default: 0
        status:
          allOf:
          - $ref: '#/components/schemas/ProductStatus'
          default: DRAFT
        ingredients:
          items:
            $ref: '#/components/schemas/IngredientCreate'
          type: array
          title: Ingredients
          default: []
        stability_tests:
          items:
            $ref: '#/components/schemas/StabilityTestCreate'
          type: array
          title: Stability Tests
          default: []
        compatibility_tests:
          items:
            $ref: '#/components/schemas/CompatibilityTestCreate'
          type: array
          title: Compatibility Tests
          default: []
      type: object
      title: ProductUpdate
    StabilityTest:
      properties:
        test_type:
          type: string
          title: Test Type
        test_date:
          type: string
          format: date-time
          title: Test Date
        result:
          type: string
          title: Result
        notes:
          type: string
          title: Notes
        id:
          type: string
          format: uuid
          title: Id
        product_id:
          type: string
          format: uuid
          title: Product Id
      type: object
      required:
      - test_type
      - test_date
      - result
      - id
      - product_id
      title: StabilityTest
    StabilityTestCreate:
      properties:
        test_type:
          type: string
          title: Test Type
        test_date:
          type: string
          format: date-time
          title: Test Date
        result:
          type: string
          title: Result
        notes:
          type: string
          title: Notes
      type: object
      required:
      - test_type
      - test_date
      - result
      title: StabilityTestCreate
    Template:
      properties:
        name:
          type: string
          title: Name
          description: Nom logique du modèle
        version:
          type: string
          title: Version
          description: Version du modèle
        drive_file_id:
          type: string
          title: Drive File Id
          description: ID du fichier sur Google Drive
        thumbnail_url:
          type: string
          title: Thumbnail Url
        id:
          type: string
          format: uuid
          title: Id
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
      type: object
      required:
      - name
      - version
      - drive_file_id
      - id
      - created_at
      - updated_at
      title: Template
    Token:
      properties:
        access_token:
          type: string
          title: Access Token
        token_type:
          type: string
          title: Token Type
          default: bearer
      type: object
      required:
      - access_token
      title: Token
    User:
      properties:
        email:
          type: string
          format: email
          title: Email
        role:
          type: string
          pattern: ^(admin|editor|viewer)$
          title: Role
        two_factor_enabled:
          type: boolean
          title: Two Factor Enabled
          default: false
        is_active:
          type: boolean
          title: Is Active
          default: true
        id:
          anyOf:
          - type: string
            format: uuid
          - type: string
          title: Id
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
      type: object
      required:
      - email
      - role
      - id
      - created_at
      - updated_at
      title: User
    UserCreate:
      properties:
        email:
          type: string
          format: email
          title: Email
        role:
          type: string
          pattern: ^(admin|editor|viewer)$
          title: Role
        two_factor_enabled:
          type: boolean
          title: Two Factor Enabled
          default: false
        is_active:
          type: boolean
          title: Is Active
          default: true
        password:
          type: string
          minLength: 8
          title: Password
        password_confirm:
          type: string
          title: Password Confirm
      type: object
      required:
      - email
      - role
      - password
      - password_confirm
      title: UserCreate
    UserUpdate:
      properties:
        email:
          type: string
          format: email
          title: Email
        role:
          type: string
          pattern: ^(admin|editor|viewer)$
          title: Role
        two_factor_enabled:
          type: boolean
          title: Two Factor Enabled
        is_active:
          type: boolean
          title: Is Active
      type: object
      title: UserUpdate
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
  securitySchemes:
    OAuth2PasswordBearer:
      type: oauth2
      flows:
        password:
          scopes: {}
          tokenUrl: /api/v1/auth/token
